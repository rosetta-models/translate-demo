namespace demo.translate.format.example_1
version "${project.version}"

/*

*/
synonym source FORMAT_EXAMPLE_1

type Root:
    [rootType]
	zField Z (0..1)
		[synonym FORMAT_EXAMPLE_1 value "a"]

type Z:
	dateField date (1..1)
		[synonym FORMAT_EXAMPLE_1 value "startDate" dateFormat "MM/dd/yyyy"]
	intField int (1..1)
		[synonym FORMAT_EXAMPLE_1 value "tenor" maps 2 pattern "([0-9])*.*" "$1"]
	enumField TestEnum (1..1)
		[synonym FORMAT_EXAMPLE_1 value "tenor" maps 2 pattern "[0-9]*(.*)" "$1"]
	strField string (0..*)
		[synonym FORMAT_EXAMPLE_1 value "b"]
		[synonym FORMAT_EXAMPLE_1 value "bplus" pattern "Fish and ([a-zA-Z]*)" "$1"]

enum TestEnum:
	D
		[synonym FORMAT_EXAMPLE_1 value "D" pattern "[0-9]*(.*)" "$1"]
	W
		[synonym FORMAT_EXAMPLE_1 value "W" pattern "[0-9]*(.*)" "$1"]
	M
		[synonym FORMAT_EXAMPLE_1 value "M" pattern "[0-9]*(.*)" "$1"]
	Y
		[synonym FORMAT_EXAMPLE_1 value "Y" pattern "[0-9]*(.*)" "$1"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="a">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="startDate" type="xs:string"/>
                            <xs:element name="tenor" type="xs:string"/>
                            <xs:element name="b" type="xs:string"/>
                            <xs:element name="bplus" type="xs:string"/>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/