namespace demo.translate.mappers.example_10
version "${project.version}"

/*
Example 10:

Mapper updates fields on multi-cardinality basic type with metadata scheme.
*/
synonym source MAPPERS_EXAMPLE_10

type Root:
    [rootType]
<<<<<<< HEAD
	engineSpecification EngineSpecification (1..1)
	    [synonym MAPPERS_EXAMPLE_10 value "engineType"]
=======
	zField Z (1..1)
	    [synonym MAPPERS_EXAMPLE_10 value "a"]
>>>>>>> dfdc5b690cc24c58177a5121ae6a352abd9d9af9

type EngineSpecification:
	emmissions string (1..1)
	    [synonym MAPPERS_EXAMPLE_10 value "emmissions" path "engineDetail->metric"]
	fuelType string (0..*)
	    [metadata scheme]
	    // value and scheme updated by mapper
	    [synonym MAPPERS_EXAMPLE_10 value "combustible" path "engineDetail->metric" mapper "Example10"]
/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="engineType">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="engineDetail">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="metric">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element type="xs:string" name="emmissions"/>
                                                    <xs:element type="xs:string" name="combustible" maxOccurs="unbounded" minOccurs="0"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/