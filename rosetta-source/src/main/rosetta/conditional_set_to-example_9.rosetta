namespace demo.translate.conditional_set_to.example_9
version "${project.version}"

/*
test10 shouldSetFieldWithPathOnSingleCardinality
*/
synonym source CONDITIONAL_SET_TO_EXAMPLE_9

type Root:
    [rootType]
    yField Y (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value
            "c" path "a->b",
            "e" path "a->b"]

type Y:
    zField Z (0..1)

type Z:
    strField string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value "f"]
    enumField TestEnum (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 set to TestEnum -> FOO when path = "b->c"]
        [synonym CONDITIONAL_SET_TO_EXAMPLE_9 set to TestEnum -> BAR when path = "b->e"]

enum TestEnum:
	FOO
	    [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value "foo"]
	BAR
	    [synonym CONDITIONAL_SET_TO_EXAMPLE_9 value "bar"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="a">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="b">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="c" type="PartyReference"/>
                                        <xs:element name="e" type="PartyReference"/>
                                    </xs:sequence>
                                    <xs:attribute name="id" type="xs:string"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="PartyReference">
        <xs:all>
            <xs:element name = "f" type = "xs:string"/>
        </xs:all>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
</xs:schema>
*/