namespace demo.translate.conditional_set_to.example_13
version "${project.version}"

/*
test27_1 enumWith2PathsExistCondition1 and test27_3 enumWith2PathsExistCondition3
*/
synonym source CONDITIONAL_SET_TO_EXAMPLE_13

type Root:
    [rootType]
    str1Field string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_13 value "d" path "a->b->c1"]
    str2Field string (1..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_13 value "d" path "a->b->c2"]
    yField Y (1..*)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_13 value "a"]

type Y:
    zField Z (1..*)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_13 value "b"]

type Z:
    enumField TestEnum (0..1)
        [synonym CONDITIONAL_SET_TO_EXAMPLE_13 set to TestEnum->FOO when "c2" exists and "c1" exists]

enum TestEnum:
    FOO

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="a">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="b" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="c1" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="d" type="xs:string" />
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="c2" minOccurs="0">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="d" type="xs:string" />
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/