namespace demo.translate.conditional_set.example_5
version "${project.version}"

/*
shouldSetWhenNonLeafPathExists1 shouldSetWhenNonLeafPathExists2 test 11.1-2
*/
synonym source CONDITIONAL_SET_EXAMPLE_5

type Root:
    [rootType]
	yField Y (1..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "a"]

type Y:
	z1Field Z (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "b" set when "b->c" exists]
	z2Field Z (0..1)
	    [synonym CONDITIONAL_SET_EXAMPLE_5 value "b" set when "b->d" exists]

type Z:
	strField string (1..1)
        [synonym CONDITIONAL_SET_EXAMPLE_5 value "e" path "c"]
        [synonym CONDITIONAL_SET_EXAMPLE_5 value "e" path "d"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="a">
                    <xs:complexType>
                        <xs:all>
                            <xs:element name="b">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="c" minOccurs="0">
                                            <xs:complexType>
                                                <xs:all>
                                                    <xs:element name="e" type="xs:string" />
                                                </xs:all>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="d" minOccurs="0">
                                            <xs:complexType>
                                                <xs:all>
                                                    <xs:element name="e" type="xs:string" />
                                                </xs:all>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:all>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/