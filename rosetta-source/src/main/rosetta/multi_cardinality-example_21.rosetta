namespace demo.translate.multi_cardinality.example_21
version "${project.version}"

/*

*/
synonym source MULTI_CARDINALITY_EXAMPLE_21

type Root:
    [rootType]
    vField V (1..1)
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 value "a"]

type V:
    wField W (0..*)
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 value "b"]
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 hint "c"]

type W:
    xField X (0..*)
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 value "c"]
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 hint "d"]

type X:
    yField Y (0..*)

type Y:
    zField Z (0..*)

type Z:
    str1Field string (0..1)
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 value "d"]
    str2Field string (0..1)
    	[synonym MULTI_CARDINALITY_EXAMPLE_21 value "e"]

/*
Schema:

<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="dataDocument">
        <xs:complexType>
            <xs:all>
                <xs:element name="a">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="b" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="d" type="xs:string" />
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="c" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="e" type="xs:string" />
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
*/